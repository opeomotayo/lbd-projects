apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: logging
  labels:
    zabbix-app: zabbix-agent
  name: zabbix-agent
spec:
  replicas: 1
  selector:
    matchLabels:
     zabbix-app: zabbix-agent
  serviceName: "zabbix-agent"
  template:
    metadata:
      labels:
        zabbix-app: zabbix-agent
    spec:   
      containers:
      - env:
        - name: ZBX_SERVER_HOST
          valueFrom:
            configMapKeyRef:
              key: ZBX_SERVER_HOST
              name: zabbix-app

        - name: ZBX_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: ZBX_HOSTNAME
              name: zabbix-app

        image: zabbix/zabbix-agent:ubuntu-4.4.5
        name: zabbix-agent
        ports:
        - containerPort: 10050
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/zabbix/zabbix_agentd.d
          name: zabbix-agent-claim
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: zabbix-agent-claim
        persistentVolumeClaim:
          claimName: zabbix-agent-claim
          readOnly: true
### Service 
---
apiVersion: v1
kind: Service
metadata:
  namespace: logging
  labels:
    zabbix-app: zabbix-agent
  name: zabbix-agent
spec:
  ports:
  - name: "10050"
    port: 10050
    targetPort: 10050
  selector:
    zabbix-app: zabbix-agent
status:
  loadBalancer: {}

### PersistentVolumeClaim2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: logging 
  labels:
     zabbix-app: zabbix-agent
  name: zabbix-agent-claim
spec:
  accessModes:
  - ReadWriteOnce #ReadOnlyMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
